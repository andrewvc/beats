// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
